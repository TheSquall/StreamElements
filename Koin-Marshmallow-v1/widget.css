@import url('https://fonts.googleapis.com/css?family={fontFamily}:100,300,400,500,700,900&display=swap');
@import url(https://fonts.googleapis.com/css?family=Source+Code+Pro:400,300);

* {
  font: normal 76px/1 {{fontFamily}}, Helvetica, sans-serif;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
}

.widget-dashboard {
  background-color: {{dashboardBackgroundColor}};
  /* Top Right Bottom Left */
  /* Yes, this is padding. I am calling it margin to keep naming "similar" */
  padding: {{dashboardTopMargin}}px {{dashboardRightMargin}}px {{dashboardBottomMargin}}px {{dashboardLeftMargin}}px;
}

.container {
  display: flex;
  justify-content: {{itemSpacing}};
  gap: {{itemPadding}}px;
  flex-wrap: wrap;
}

.marshmallow-container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.icon-counter-container {
  align-items: center;
  gap: {{iconPadding}}px;
}

.icon {
  height: {{imageSize}}px;
  margin: auto auto;
}

.counter {
  color: {{counterColor}};
  font-size: {{counterFontSize}}px;
  min-width: 2ch;
}

.description {
  padding-top: {{iconPadding}}px;
  padding-bottom: {{iconPadding}}px;
  text-align: center;
  min-width: 4em;
  max-width: 7em;
  color: {{descriptionColor}};
  font-size: {{descriptionFontSize}}px;
  overflow-wrap: break-word;
}

/* Border */

.widget-border {
  border-color: {{borderColor}};
  border-width: {{borderWidth}}px;
  border-radius: {{borderRadius}}px;
  border-style: {{borderType}};
}

.animated-box {
  border-radius: {{animatedBorderRadius}}px;
}

.animated-box h1 {
  font-weight: 200;
  font-size: 40px;
  text-transform: uppercase;
}

.animated-box p {
  font-weight: 200;
}

.animated-box {
  position: relative;
  border-radius: {{animatedBorderRadius}}px;
}

.animated-box:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: {{animatedBorderRadius}}px;
  background: linear-gradient({{animatedBorderAngle}}deg, {{animatedBorderColor}}, {{animatedBorderColorTwo}}, {{animatedBorderColorThree}});
  clip-path: polygon(0% 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) calc(100% - {{animatedBorderWidth}}px), {{animatedBorderWidth}}px calc(100% - {{animatedBorderWidth}}px), {{animatedBorderWidth}}px 100%, 100% 100%, 100% 0%, 0% 0%);
}

.animated-box-100:after {
  background-size: 100% 100%;
}

.animated-box-300:after {
  background-size: 300% 300%;
}

.animated-box.in:after {
  animation: frame-enter 1s forwards ease-in-out reverse, gradient-animation {{animationDuration}}s ease-in-out infinite;
}

@keyframes gradient-animation {
  0% {
    background-position: 15% 0%;
  }
  50% {
    background-position: 85% 100%;
  }
  100% {
    background-position: 15% 0%;
  }
}

@keyframes frame-enter {
  0% {
    clip-path: polygon(0% 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) calc(100% - {{animatedBorderWidth}}px), {{animatedBorderWidth}}px calc(100% - {{animatedBorderWidth}}px), {{animatedBorderWidth}}px 100%, 100% 100%, 100% 0%, 0% 0%);
  }
  25% {
    clip-path: polygon(0% 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) calc(100% - {{animatedBorderWidth}}px), calc(100% - {{animatedBorderWidth}}px) calc(100% - {{animatedBorderWidth}}px), calc(100% - {{animatedBorderWidth}}px) 100%, 100% 100%, 100% 0%, 0% 0%);
  }
  50% {
    clip-path: polygon(0% 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) {{animatedBorderWidth}}px, calc(100% - {{animatedBorderWidth}}px) {{animatedBorderWidth}}px, 100% 0%, 0% 0%);
  }
  75% {
    -webkit-clip-path: polygon(0% 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px {{animatedBorderWidth}}px, {{animatedBorderWidth}}px {{animatedBorderWidth}}px, {{animatedBorderWidth}}px {{animatedBorderWidth}}px, {{animatedBorderWidth}}px {{animatedBorderWidth}}px, {{animatedBorderWidth}}px {{animatedBorderWidth}}px, {{animatedBorderWidth}}px {{animatedBorderWidth}}px, {{animatedBorderWidth}}px 0%, 0% 0%);
  }
  100% {
    -webkit-clip-path: polygon(0% 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px 100%, {{animatedBorderWidth}}px 100%, 0% 100%);
  }
}
